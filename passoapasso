INSTALANDO AS BIBLIOTECAS

1º iniciar o projeto node com npm init
2º instalar o express com npm install --save express
3º instalar o sequelize(BD) npm install --save sequelize
4º instalar o mysql2 dependencia do sequelize npm install --save mysql2
5º instalar o bodyparser com npm install --save body-parser (bibliotece express para formulario)
6º instalar o ejs (renderizar html) npm install --save ejs

INICIANDO A BASE DO PROJETO

1º CRIAR O ARQUIVO index.js e chamar o express
2º criar uma instancia do express app=express
3º criar a rota principal(app.get("/"))
4º rodar o app com listen com a porta(8080)
5º inicar o nodemon para ver se está rodando
6º configurar a view engine para visualizar html(ejs) app.set('view engine,ejs')
8º criar a pasta views pro ejs;

9º configurar o bodyparser, importar com require e depois 
app.use(bodyParser.urlencoded({extended:false})) e colocar 
para aceitar formato json com app.use(bodyparser..json());

10º configurar para o express trabalhar com arquivos estaticos(css,imagens )c
m app.use(express.static('public'))

11º configurar o banco de dados(abrir o sql workbeck e criar um novo banco)
12º criar a pasta database para colocar as conexões
13º criar um arquivo js e importar o sequelize
14º criar um objeto de conexao const connection = new sequelize
15º dentro do objeto colocar as informaçoes do banco, nome, senha e local e dialeto
16º exportar o objeto de conexão(module.exports=connection)
17º no index.js criar a constante para conectar ao banco
18º conectar ao BD chamando o objeto de conexão = connection.authenticate().then()
19º fazer a autenticação com sucesso ou não com catch

20º configurar o bootstrap, baixando e extraindo o css e js para a pasta public
21º copiar o código da página e colocar no cmd 
22° criar a pasta de parciais dentro da pasta view do layout reutilizavel
23º criar os header, footer, navbar etc.
23º no header criar o html básico e colcoar a referencia do css stylesheet e css/bootstrap
24º criar o footer e colocar nele os scipt da página do bootstrap o jquery e o poop
25º importar oara  o index.ejso header e o footer com <%-include('partials'/'footer.ejs') %>

COMEÇANDO O PROJETO
** ARQUITETANDO O NODE EM VÁRIAS PASTAS

1º criar uma pasta de categorias e os scripts de categorias ficara aqui 
2º criar a pasta de artigos e os scripts de artigos ficara aqui
3º criar o controler onde fica as rotas nas pastas
4º no arquivo carregar o express, e chamar o express.router()
5º criar as rotas no arquivo e fazer a exportação
6º importar as rotas no arquivo principal(index.js)
7º dizer para app que quer utilizar as rotas de outra pasta
8º criar o model de categorias na pasta categorias (categoires.js)  e importar o
sequelize nela e o script de conexão com o BD

9º criar o slug(endereço da categoria)
10º exportar a categoria
11º criar o model do artigo e exportar ela
12º definir os relacionametos do artigo com categoria
13º criar o relacionamento em um só arquivo
14º importar o model que quer se relacionar no caso category
15º dizer que o artigo pertence a categoria com variavel articles.belongsTo(category)
**relacionamento 1 para 1 no sequelize é o belongs**
16º dizer que a categoria pertence a varios artigos category.hasMany(article)
** relacionamento 1 para muitos no sequelize é o hasMany()**
17º atualizar o BD sincronizando os model de relaciomaneto com o bd com 
Article.sync({force:true}) e na category category.sync({force:true});

18º importar os arquivos de model no index.js com const Articles =require(caminho)
19º mesma coisa de cima com categorias
20º criar a rota categories separadamente em pasta no controller categories21º
21º carregar o bootstrap no controllercategories
22º criar o arquivo new na pasta admin categorias e importar as partials e adicionar o formulário para add
23º cadastrar a categoria no BD, importar o arquivo de conexão da categoria, criar a rota, verificar se é nula, e importa ro sluigy para endereço personalizado




<nav class ="navbar navbar-expand-lg navbar-dark bg-primary">
    <a class = "navbar-brand" href="/">
        GuiaPres
    </a>
    <div class="dropdown">
        <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          Categorias
        </a>
      
        <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
          <a class="dropdown-item" href="#">
                <%categories.forEach(categories=>{ %>
                    <li class="nav-item">
                        <a class="nav-link" href="/"><%=categories.title %></a>           
                    </li>
                <% })%>
          </a>
         
        </div>
      </div>

</nav>
